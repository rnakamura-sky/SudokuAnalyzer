<UserControl x:Class="Sudoku.WPF.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:selectors="clr-namespace:Sudoku.WPF.Views.DataTemplateSelectors"
             xmlns:converters="clr-namespace:Sudoku.WPF.Views.Converters"           
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <converters:BoolToOpacityConverter x:Key="BoolToOpacityConverter"/>
        <DataTemplate x:Key="ConfirmTemplate">
            <Label Content="{Binding ConfirmValueText}"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   HorizontalContentAlignment="Center"
                   VerticalContentAlignment="Center"/>
        </DataTemplate>
        <DataTemplate x:Key="CandidateTemplate">
            <Grid Margin="0">
                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Label Content="{TemplateBinding Button.Content}" Opacity="{TemplateBinding Opacity}"
                                           Padding="0" Margin="0"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center"/>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button Grid.Row="0" Grid.Column="0"
                        Content="1"
                        Opacity="{Binding Candidates[0],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="1"/>
                <Button Grid.Row="0" Grid.Column="1"
                        Content="2"
                        Opacity="{Binding Candidates[1],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="2"/>
                <Button Grid.Row="0" Grid.Column="2"
                        Content="3"
                        Opacity="{Binding Candidates[2],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="3"/>
                <Button Grid.Row="1" Grid.Column="0"
                        Content="4"
                        Opacity="{Binding Candidates[3],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="4"/>
                <Button Grid.Row="1" Grid.Column="1"
                        Content="5"
                        Opacity="{Binding Candidates[4],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="5"/>
                <Button Grid.Row="1" Grid.Column="2"
                        Content="6"
                        Opacity="{Binding Candidates[5],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="6"/>
                <Button Grid.Row="2" Grid.Column="0"
                        Content="7"
                        Opacity="{Binding Candidates[6],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="7"/>
                <Button Grid.Row="2" Grid.Column="1"
                        Content="8"
                        Opacity="{Binding Candidates[7],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="8"/>
                <Button Grid.Row="2" Grid.Column="2"
                        Content="9"
                        Opacity="{Binding Candidates[8],Converter={StaticResource BoolToOpacityConverter}}"
                        IsEnabled="{Binding IsSelected}"
                        Command="{Binding ActionCommand}" CommandParameter="9"/>

                <!--<Label Grid.Row="0" Grid.Column="0" Content="1" Opacity="{Binding Candidates[0],Converter={StaticResource BoolToOpacityConverter}}"
                       Margin="0" Padding="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>-->
            </Grid>
        </DataTemplate>
        <selectors:CellTemplateSelector x:Key="CellTemplateSelector"
                                        ConfirmTemplate="{StaticResource ConfirmTemplate}"
                                        CandidateTemplate="{StaticResource CandidateTemplate}"/>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            <ListBox ItemsSource="{Binding Cells}"
                     ItemTemplateSelector="{StaticResource CellTemplateSelector}"
                     SelectedItem="{Binding SelectedCell}"
                     Height="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=Self}}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
                        <Setter Property="Grid.Row" Value="{Binding RowIndex}"/>
                        <Setter Property="Grid.Column" Value="{Binding ColumnIndex}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <Grid>
                                        <Border BorderBrush="DarkGray"
                                                BorderThickness="0.2"/>
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Stretch"
                                                              Margin="3"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0.2"/>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Aqua" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Yellow" Opacity="0.3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <DataTrigger Binding="{Binding LeftLine}" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="1, 0, 0, 0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TopLine}" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0, 1, 0, 0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RightLine}" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0, 0, 1, 0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BottomLine}" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding LeftLine}" Value="True"/>
                                    <Condition Binding="{Binding TopLine}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="1, 1, 0, 0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RightLine}" Value="True"/>
                                    <Condition Binding="{Binding TopLine}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0, 1, 1, 0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding LeftLine}" Value="True"/>
                                    <Condition Binding="{Binding BottomLine}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="1, 0, 0, 1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RightLine}" Value="True"/>
                                    <Condition Binding="{Binding BottomLine}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0, 0, 1, 1"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsConfirm}" Value="True">
                                <Setter Property="Background" Value="LightSkyBlue"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFixed}" Value="True">
                                <Setter Property="Background" Value="AliceBlue"/>
                            </DataTrigger>


                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <Button Content="Input New Question"
                    Command="{Binding ShowInputDialogCommand}"/>
            <Button Content="Reset"
                    Command="{Binding ResetCommand}"/>
            <Button Content="Reconcil"
                    Command="{Binding ReconcilCommand}"/>
            <Button Content="ReconcilPair"
                    Command="{Binding ReconcilPairCommand}"/>
            <Button Content="ReconcilGroup"
                    Command="{Binding ReconcilGroupCommand}"/>
            <Button Content="DecideCells"
                    Command="{Binding DecideCellsCommand}"/>
            <Button Content="DecideCellInGroups"
                    Command="{Binding DecideCellInGroupsCommand}"/>
            
        </StackPanel>
    </Grid>
</UserControl>
